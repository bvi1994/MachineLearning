define("bundles/cml/models/HTMLToCMLConverter/InlineElement",["require","exports","module","underscore","bundles/cml/models/CMLParser"],function(require,exports,module){"use strict";function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}var _=require("underscore"),e=require("bundles/cml/models/CMLParser"),t=e.SUPPORTED_INLINE_BLOCKS,n={a:[{name:"href",required:!0},{name:"title"}]},i=function(){function InlineElement(i,n){var e=this;if(_classCallCheck(this,InlineElement),this.doc=i,this.node=n,this.tagName=this.getTagName(n),_(t).contains(this.tagName))this.childNodes=_(this.node.childNodes).clone(),this.block=this.doc.createElement(this.tagName),this.setBlockAttributes(),_(this.childNodes).each(function(t){var n=e.getTagName(t);if(n===e.tagName)throw new Error("Invalid nested inline element "+n);var i=new InlineElement(e.doc,t);e.block.appendChild(i.block)});else{if(3!==n.nodeType)throw new Error("Invalid inline element "+this.tagName);this.block=this.node}}return InlineElement.prototype.getTagName=function getTagName(e){return e.tagName&&e.tagName.toLowerCase()},InlineElement.prototype.setBlockAttributes=function setBlockAttributes(){var e=this,t=n[this.tagName];t&&_(t).each(function(n){var t=n.name,o=n.required,i=e.node.getAttribute(t);if(i)e.block.setAttribute(t,i);else if(o)throw new Error("Missing attribute "+t+" for "+e.tagName)})},InlineElement}();module.exports=i});