define("bundles/cml/components/CMLEditorToolbar",["require","exports","module","classnames","react","react-bootstrap","css!./__styles__/CMLEditorToolbar"],function(require,exports,module){"use strict";function _defaults(e,n){for(var a=Object.getOwnPropertyNames(n),t=0;t<a.length;t++){var r=a[t],o=Object.getOwnPropertyDescriptor(n,r);o&&o.configurable&&void 0===e[r]&&Object.defineProperty(e,r,o)}return e}function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function _possibleConstructorReturn(t,e){if(!t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!e||"object"!=typeof e&&"function"!=typeof e?t:e}function _inherits(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function, not "+typeof e);t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,enumerable:!1,writable:!0,configurable:!0}}),e&&(Object.setPrototypeOf?Object.setPrototypeOf(t,e):_defaults(t,e))}var r,o,n,t,s=require("classnames"),e=require("react"),a=require("react-bootstrap"),i=a.Tooltip,c=a.OverlayTrigger;require("css!./__styles__/CMLEditorToolbar");var l=(o=r=function(t){function ToolbarButton(){return _classCallCheck(this,ToolbarButton),_possibleConstructorReturn(this,t.apply(this,arguments))}return _inherits(ToolbarButton,t),ToolbarButton.prototype.render=function render(){var t=this.props.block,r=t.commandName;if("divider"===t.commandName)return e.createElement("div",{key:r,className:"scribe-toolbar-divider"});var o=t.commandName,l=t.disabledTags?t.disabledTags.join(","):"",n=t.tooltip,p=s("scribe-toolbar-button","scribe-toolbar-"+o),a=e.createElement("button",{key:r,"data-command-name":o,"data-disabled-tags":l,className:p}),u=function renderBtnWithTooltip(){var t=e.createElement(i,null,n);return e.createElement(c,{key:r,placement:"top",overlay:t,delayShow:600},a)};return n?u():a},ToolbarButton}(e.Component),r.propTypes={block:e.PropTypes.object.isRequired},o),p=(t=n=function(t){function CMLEditorToolbar(){return _classCallCheck(this,CMLEditorToolbar),_possibleConstructorReturn(this,t.apply(this,arguments))}return _inherits(CMLEditorToolbar,t),CMLEditorToolbar.prototype.render=function render(){var t=this.props,r=t.blocks,o=t.style;if(0===r.length)return null;return e.createElement("div",{className:"rc-CMLEditorToolbar",style:o},r.map(function(t){return e.createElement(l,{key:t.commandName,block:t})}))},CMLEditorToolbar}(e.Component),n.propTypes={style:e.PropTypes.object.isRequired,blocks:e.PropTypes.array.isRequired},t);module.exports=p});